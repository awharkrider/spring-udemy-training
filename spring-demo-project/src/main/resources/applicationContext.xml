<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- load the properties file: sport.properties -->
    <!--classpath:sport.properties-->
    <context:property-placeholder location="sport.properties"/>

    <!-- dependencies to inject -->
    <bean id="myFortuneService" class="com.aarontraining.springdemo.fortune_service.HappyFortuneService">
    </bean>


    <!-- Beans with dependency injection -->
    <bean id="myCoach" class="com.aarontraining.springdemo.BaseballCoach">
        <constructor-arg ref="myFortuneService"/>
    </bean>

    <bean id="yourCoach" class="com.aarontraining.springdemo.HockeyCoach">
        <constructor-arg ref="myFortuneService"/>
        <!-- Setter injection-->
        <property name="fortuneService" ref="myFortuneService"/>
    </bean>

    <bean id="myCricketCoach"
          class="com.aarontraining.springdemo.CricketCoach">

        <!-- Setter injection-->
        <property name="fortuneService" ref="myFortuneService"/>

        <!-- Inject literal values-->
        <!--<property name="emailAddress" value="theCricketCoach@example.com"/>-->
        <!--<property name="team" value="Sunrisers (example team name)"/>-->
        <property name="emailAddress" value="${cricketCoach.email}"/>
        <property name="team" value="${cricketCoach.team}"/>
    </bean>

</beans>
